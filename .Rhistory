}
}
return(comps)
}
testcompfinder <- comp_finder("1420 Christy Ave","40204")
comp_finder <- function(address,zip){
principal.address <- GetDeepSearchResults(address = address,citystatezip = as.character(zip),zws_id = get_zillow_web_service_id())
principal.address <- singleListExtract(principal.address$response)
comps <- multipleDeepCompsZillow(principal.address$zpid,25)
# get comps 5 deep for more data
# tempcomps <- comps
# for(i in 1:5) {
#   for(comp in tempcomps) {
#     temp <- multipleDeepCompsZillow(comp$zpid,25)
#     comps <- bind_rows(comps,temp)
#     rm(temp)
#   }
# tempcomps <- tempcomps[duplicated(tempcomps$street)==FALSE,]
# tempcomps <- anti_join(comps,tempcomps)
# if(length(tempcomps[1])<=1) {
#   break
# }
# }
return(comps)
}
testcompfinder <- comp_finder("1420 Christy Ave","40204")
View(testcompfinder)
View(testcompfinder)
length(principal.address$zpid)
source('Functions.R')
requiredPackages <- c('ZillowR',
'readr',
'tidyverse',
'RSQLite',
'DBI',
'XML',
'lubridate',
'corrplot',
'stringr',
'car',
'olsrr',
'Hmisc',
'psych')
loadLibraries(requiredPackages)
rm(requiredPackages)
source('Functions.R')
source('zillowAPIcredentials.R')
comp_finder <- function(address,zip){
principal.address <- GetDeepSearchResults(address = address,citystatezip = as.character(zip),zws_id = get_zillow_web_service_id())
principal.address <- singleListExtract(principal.address$response)
comps <- multipleDeepCompsZillow(principal.address$zpid,25)
# get comps 5 deep for more data
tempcomps <- comps
for(i in 1:5) {
print(i)
for(comp in tempcomps) {
temp <- multipleDeepCompsZillow(comp$zpid,25)
comps <- bind_rows(comps,temp)
rm(temp)
}
tempcomps <- tempcomps[duplicated(tempcomps$street)==FALSE,]
tempcomps <- anti_join(comps,tempcomps)
if(length(tempcomps[1])<=1) {
break
}
}
return(comps)
}
testcompfinder <- comp_finder("1420 Christy Ave","40204")
comp_finder <- function(address,zip){
principal.address <- GetDeepSearchResults(address = address,citystatezip = as.character(zip),zws_id = get_zillow_web_service_id())
principal.address <- singleListExtract(principal.address$response)
comps <- multipleDeepCompsZillow(principal.address$zpid,25)
comps <- comps[duplicated(comps$street)==FALSE,]
# get comps 5 deep for more data
tempcomps <- comps
for(i in 1:5) {
print(i)
for(comp in tempcomps) {
temp <- multipleDeepCompsZillow(comp$zpid,25)
comps <- bind_rows(comps,temp)
rm(temp)
}
tempcomps <- tempcomps[duplicated(tempcomps$street)==FALSE,]
tempcomps <- anti_join(comps,tempcomps)
if(length(tempcomps[1])<=1) {
break
}
}
return(comps)
}
testcompfinder <- comp_finder("1420 Christy Ave","40204")
comp_finder <- function(address,zip){
principal.address <- GetDeepSearchResults(address = address,citystatezip = as.character(zip),zws_id = get_zillow_web_service_id())
principal.address <- singleListExtract(principal.address$response)
comps <- multipleDeepCompsZillow(principal.address$zpid,25)
comps <- comps[duplicated(comps$street)==FALSE,]
# get comps 5 deep for more data
tempcomps <- comps
for(i in 1:5) {
print(i)
for(zpid in tempcomps$zpid) {
temp <- multipleDeepCompsZillow(zpid,25)
comps <- bind_rows(comps,temp)
rm(temp)
}
comps <- comps[duplicated(comps$street)==FALSE,]
tempcomps <- anti_join(comps,tempcomps)
if(length(tempcomps[1])<=1) {
break
}
}
return(comps)
}
testcompfinder <- comp_finder("1420 Christy Ave","40204")
View(testcompfinder)
comps <- testcompfinder
updatedDetails <- multipleUpdatedPropertyDetails(comps$zpid)
mydb2 <- dbConnect(RSQLite::SQLite(),"my-db.sqlite")
?dbWriteTable
dbWriteTable(mydb2,"comps",comps,append=TRUE)
dbWriteTable(mydb2,"comps",comps,append=FALSE)
dbWriteTable(mydb2,"details",updatedDetails,append=FALSE)
length(dbGetQuery(mydb2,"SELECT * FROM comps"))
length(dbGetQuery(mydb2,"SELECT * FROM comps")[1])
length(dbGetQuery(mydb2,"SELECT * FROM comps")[2])
test<-dbGetQuery(mydb2,"SELECT * FROM comps")
rm(test)
View(comps)
zillow.data <- left_join(comps,updatedDetails) #by = all variables which have the same name
zillow.data <- zillow.data %>%
rowwise() %>% mutate(medianUSpriceAssessmentYear = getYearAvgFromMonthly(medianHousePrice.df,taxAssessmentYear)) %>%
rowwise() %>% mutate(medianUSpriceLastSoldDate = getMedianFromDate(medianHousePrice.df,mdy(lastSoldDate)))
medianHousePrice.df <- read_csv("MSPNHSUS.csv")
medianHousePrice.df$DATE <- as.character(medianHousePrice.df$DATE)
dbWriteTable(mydb,"medianHousePrice",medianHousePrice.df)
medianHousePrice.df <- dbGetQuery(mydb,"select * from medianHousePrice")
medianHousePrice.df$DATE <- ymd(medianHousePrice.df$DATE)
dbWriteTable(mydb2,"medianHousePrice",medianHousePrice.df)
medianHousePrice.df$DATE <- ymd(medianHousePrice.df$DATE)
zillow.data <- left_join(comps,updatedDetails) #by = all variables which have the same name
zillow.data <- zillow.data %>%
rowwise() %>% mutate(medianUSpriceAssessmentYear = getYearAvgFromMonthly(medianHousePrice.df,taxAssessmentYear)) %>%
rowwise() %>% mutate(medianUSpriceLastSoldDate = getMedianFromDate(medianHousePrice.df,mdy(lastSoldDate)))
zillow.data$medianUSpriceLastSoldDate[zillow.data$medianUSpriceLastSoldDate == 0] <- NA
for(col in colnames(zillow.data)) {
zillow.data[,col] <- unlist(zillow.data[,col])
}
zillow.data <- zillow.data %>% select(zpid,
street,
zipcode,
taxAssessmentYear,
taxAssessment,
lotSizeSqFt,
finishedSqFt,
bathrooms,
bedrooms,
totalRooms,
lastSoldDate,
lastSoldPrice,
zest = amount,
zestlow = low,
zesthigh = high,
percentile,
zindexValue,
numFloors,
roof:coolingSystem,
floorCovering,
basement,
coveredParkingSpaces,
medianUSpriceAssessmentYear,
medianUSpriceLastSoldDate)
zillow.data$zindexValue <- str_replace(zillow.data$zindexValue,",","")
categorical <- c("zipcode",
"roof",
"exteriorMaterial",
"parkingType",
"heatingSources",
"heatingSystem",
"coolingSystem",
"floorCovering",
"basement")
for(col in categorical) {
zillow.data[,col] <- unlist(lapply(zillow.data[,col],as.character))
}
rm(categorical)
numeric <- c("taxAssessment",
"lotSizeSqFt",
"finishedSqFt",
"bathrooms",
"bedrooms",
"totalRooms",
"numFloors",
"lastSoldPrice",
"zest",
"zestlow",
"zesthigh",
"percentile",
"zindexValue",
"coveredParkingSpaces",
"medianUSpriceAssessmentYear",
"medianUSpriceLastSoldDate")
for(col in numeric) {
zillow.data[,col] <- unlist(lapply(zillow.data[,col],as.numeric))
}
rm(numeric)
zillow.data <- zillow.data %>% rowwise %>% mutate(lastSoldDate = mdy(lastSoldDate))
summary(zillow.data)
pairs.panels(select(zillow.data,taxAssessmentYear:zest,numFloors:medianUSpriceLastSoldDate),col="red")
categorical <- c("bathrooms",
"bedrooms",
"numFloors",
"coveredParkingSpaces")
for(col in categorical) {
zillow.data[,col] <- unlist(lapply(zillow.data[,col],as.character))
}
rm(categorical)
categorical <- c("bathrooms",
"bedrooms",
"totalRooms",
"numFloors",
"coveredParkingSpaces")
for(col in categorical) {
zillow.data[,col] <- unlist(lapply(zillow.data[,col],as.character))
}
rm(categorical)
?pairs.panels
zillow.data.adj <- zillow.data
zillow.data.adj <- zillow.data %>% mutate(logLotSizeSqFt = log(lotSizeSqFt),
logFinishedSqFt = log(finishedSqFt))
View(zillow.data.adj)
pairs.panels(select(zillow.data.adj,taxAssessmentYear:taxAssessment,logLotSizeSqFt:logFinishedSqFt,bathrooms:zest,numFloors:medianUSpriceLastSoldDate),col="red")
zillow.data.adj <- zillow.data %>% mutate(logLotSizeSqFt = log(lotSizeSqFt),
logFinishedSqFt = log(finishedSqFt),
logLastSoldPrice = log(lastSoldPrice),
logZest = log(zest))
pairs.panels(select(zillow.data.adj,taxAssessmentYear:taxAssessment,logLotSizeSqFt:logFinishedSqFt,bathrooms:lastSoldDate,logLastSoldPrice:logZest,numFloors:medianUSpriceLastSoldDate),col="red")
?log
set.seed(42)
?sample_n
zillow.train <- zillow.data.adj %>% sample_n(round(length(zillow.data.adj$street)*0.8))
zillow.test <- anti_join(zillow.data.adj,zillow.train)
zillow.data.adj <- zillow.data.adj %>% select(logLastSoldPrice,logZest,logLotSizeSqFt,logFinishedSqFt,
bathrooms,bedrooms,totalRooms,numFloors,roof,exteriorMaterial,
parkingType,heatingSources,heatingSystem,coolingSystem,
floorCovering,basement,coveredParkingSpaces)
set.seed(42)
zillow.train <- zillow.data.adj %>% sample_n(round(length(zillow.data.adj$street)*0.8))
zillow.train <- zillow.data.adj %>% sample_n(round(length(zillow.data.adj[1])*0.8))
zillow.test <- anti_join(zillow.data.adj,zillow.train)
zillow.train <- zillow.data.adj %>% sample_n(round(length(zillow.data.adj[[1]])*0.8))
zillow.test <- anti_join(zillow.data.adj,zillow.train)
View(zillow.test)
str(zillow.train)
str(zillow.test)
zillow.lm <- lm(logZest ~ .,data=zillow.train)
summary(zillow.lm)
zillow.lm <- lm(logZest ~ .,data=zillow.train)
zillow.lm <- lm(logZest ~ logLotSizeSqFt,logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors + roof + exteriorMaterial +
parkingType + heatingSources + heatingSystem + coolingSystem +
floorCovering + basement + coveredParkingSpaces,data=zillow.train)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors + roof + exteriorMaterial +
parkingType + heatingSources + heatingSystem + coolingSystem +
floorCovering + basement + coveredParkingSpaces,data=zillow.train)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors + roof + exteriorMaterial +
parkingType + heatingSources + heatingSystem + coolingSystem +
floorCovering + basement,data=zillow.train)
summary(zillow.lm)
?lm
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors + roof + exteriorMaterial +
parkingType + heatingSources + heatingSystem + coolingSystem +
floorCovering + basement,
data=zillow.train,na.action = na.exclude)
summary(zillow.lm)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors + roof + exteriorMaterial +
parkingType + heatingSources + heatingSystem + coolingSystem +
floorCovering + basement,
data=zillow.train,na.action = na.omit)
summary(zillow.lm)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors,
data=zillow.train,na.action = na.omit)
summary(zillow.lm)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms,
data=zillow.train,na.action = na.omit)
summary(zillow.lm)
zillow.data.adj <- zillow.data %>% mutate(logLotSizeSqFt = log(lotSizeSqFt),
logFinishedSqFt = log(finishedSqFt),
logLastSoldPrice = log(lastSoldPrice),
logZest = log(zest))
zillow.data.adj <- zillow.data.adj %>% select(lastSoldPrice,zest,logLastSoldPrice,logZest,logLotSizeSqFt,logFinishedSqFt,
bathrooms,bedrooms,totalRooms,numFloors,roof,exteriorMaterial,
parkingType,heatingSources,heatingSystem,coolingSystem,
floorCovering,basement,coveredParkingSpaces)
set.seed(42)
zillow.train <- zillow.data.adj %>% sample_n(round(length(zillow.data.adj[[1]])*0.8))
zillow.test <- anti_join(zillow.data.adj,zillow.train)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors + roof + exteriorMaterial +
parkingType + heatingSources + heatingSystem + coolingSystem +
floorCovering + basement,
data=zillow.train,na.action = na.omit)
summary(zillow.lm)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors,
data=zillow.train,na.action = na.omit)
summary(zillow.lm)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms,
data=zillow.train,na.action = na.omit)
summary(zillow.lm)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms,
data=zillow.train,na.action = na.omit)
summary(zillow.lm)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.866
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.866
plot(zillow.lm)
outlierTest(zillow.lm)
leveragePlots(zillow.lm)
?leveragePlots
leveragePlot(zillow.lm)
leveragePlots(zillow.lm)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms ,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.866
plot(zillow.lm)
leveragePlots(zillow.lm)
crPlots(zillow.lm)
cooksCutoff <- 4/((nrow(zillow.train)-length(zillow.lm$coefficients)-2))
plot(zillow.lm, which = 4, cook.levels = cooksCutoff)
plot(zillow.lm, which = 5, cook.levels = cooksCutoff)
plot(zillow.lm, which = 4, cook.levels = cooksCutoff)
plot(zillow.lm, which = 5, cook.levels = cooksCutoff)
?plot
plot(zillow.lm, which = 4, cook.levels = cooksCutoff)
plot(zillow.lm, which = 5, cook.levels = cooksCutoff)
plot(zillow.lm, which = 4, cook.levels = cooksCutoff, id.n=5)
plot(zillow.lm, which = 5, cook.levels = cooksCutoff, id.n=5)
zillow.train <- zillow.train[-which(rownames(train.sample) %in% c(4,44,58,82,16))]
zillow.train <- zillow.train[-which(rownames(zillow.train) %in% c(4,44,58,82,16))]
zillow.train <- zillow.train[-which(rownames(zillow.train) %in% c(4,44,58,82,16)),]
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.866
plot(zillow.lm)
outlierTest(zillow.lm)
crPlots(zillow.lm)
cooksCutoff <- 4/((nrow(zillow.train)-length(zillow.lm$coefficients)-2))
plot(zillow.lm, which = 4, cook.levels = cooksCutoff, id.n=5)
plot(zillow.lm, which = 5, cook.levels = cooksCutoff, id.n=5)
View(zillow.train)
plot(zillow.lm, which = 4, cook.levels = cooksCutoff, id.n=5)
plot(zillow.lm, which = 5, cook.levels = cooksCutoff, id.n=5)
plot(zillow.lm, which = 4, cook.levels = cooksCutoff, id.n=5)
zillow.train <- zillow.train[-which(rownames(zillow.train) %in% c(18,40,61,67,88)),]
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.813
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.939
zillow.train <- zillow.train[-which(rownames(zillow.train) %in% c(18,40,61,67,88)),]
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.939
plot(zillow.lm)
plot(zillow.lm, which = 5, cook.levels = cooksCutoff, id.n=5)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.939
plot(zillow.lm)
outlierTest(zillow.lm)
crPlots(zillow.lm)
cooksCutoff <- 4/((nrow(zillow.train)-length(zillow.lm$coefficients)-2))
plot(zillow.lm, which = 4, cook.levels = cooksCutoff, id.n=5)
plot(zillow.lm, which = 5, cook.levels = cooksCutoff, id.n=5)
set.seed(42)
zillow.train <- zillow.data.adj %>% sample_n(round(length(zillow.data.adj[[1]])*0.8))
zillow.test <- anti_join(zillow.data.adj,zillow.train)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors + roof + exteriorMaterial +
parkingType + heatingSources + heatingSystem + coolingSystem +
floorCovering + basement,
data=zillow.train,na.action = na.omit)
summary(zillow.lm)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.866
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.562
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms + totalRooms + numFloors,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.866
vif(zillow.lm)
alias(zillow.lm)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.562
vif(zillow.lm) #produces an error
outlierTest(zillow.lm)
crPlots(zillow.lm)
cooksCutoff <- 4/((nrow(zillow.train)-length(zillow.lm$coefficients)-2))
plot(zillow.lm, which = 4, cook.levels = cooksCutoff, id.n=5)
plot(zillow.lm, which = 5, cook.levels = cooksCutoff, id.n=5)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.562
outlierTest(zillow.lm)
crPlots(zillow.lm)
cooksCutoff <- 4/((nrow(zillow.train)-length(zillow.lm$coefficients)-2))
plot(zillow.lm, which = 4, cook.levels = cooksCutoff, id.n=5)
plot(zillow.lm, which = 5, cook.levels = cooksCutoff, id.n=5)
zillow.train <- zillow.train[-which(rownames(zillow.train) %in% c(4,44,58,82,16)),]
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.813
cooksCutoff <- 4/((nrow(zillow.train)-length(zillow.lm$coefficients)-2))
plot(zillow.lm, which = 4, cook.levels = cooksCutoff, id.n=5)
plot(zillow.lm, which = 5, cook.levels = cooksCutoff, id.n=5)
zillow.train <- zillow.train[-which(rownames(zillow.train) %in% c(5,45,54,74,89)),]
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt +
bathrooms + bedrooms,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.62
summary(zillow.lm) #adj Rsquared = 0.65
cooksCutoff <- 4/((nrow(zillow.train)-length(zillow.lm$coefficients)-2))
plot(zillow.lm, which = 4, cook.levels = cooksCutoff, id.n=5)
plot(zillow.lm, which = 5, cook.levels = cooksCutoff, id.n=5)
plot(zillow.lm, which = 4, cook.levels = cooksCutoff, id.n=5)
plot(zillow.lm, which = 5, cook.levels = cooksCutoff, id.n=5)
vif(zillow.lm)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt + bedrooms,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.65
vif(zillow.lm)
zillow.lm <- lm(logZest ~ logLotSizeSqFt + logFinishedSqFt,
data=zillow.train,na.action = na.omit)
summary(zillow.lm) #adj Rsquared = 0.648
train.pred <- predict(zillow.lm, newdata = select(zillow.train,logLotSizeSqFt,logFinishedSqFt))
test.pred <- predict(zillow.lm, newdata = select(zillow.test,logLotSizeSqFt,logFinishedSqFt))
cor(zillow.train$zest,train.pred)
train.pred
cor(zillow.train$logZest,train.pred)
?cor
cor(zillow.train$logZest,train.pred,na.rm=TRUE)
length(train.pred)
View(zillow.train)
cor(zillow.train$logZest[is.na(zillow.train$logZest)==FALSE,],train.pred[is.na(zillow.train$logZest)==FALSE,])
zillow.train$logZest[is.na(zillow.train$logZest)==FALSE,]
is.na(zillow.train$logZest)==FALSE
length(is.na(zillow.train$logZest)==FALSE)
zillow.train$logZest[is.na(zillow.train$logZest)==FALSE,]
length(zillow.train$logZest)
zillow.train$logZest[is.na(zillow.train$logZest)==FALSE]
cor(zillow.train$logZest[is.na(zillow.train$logZest)==FALSE],train.pred[is.na(zillow.train$logZest)==FALSE])
sqrt(mean((10^train.pred - zillow.train$zest)^2))
sqrt(mean((10^train.pred[is.na(zillow.train$logZest)==FALSE] - zillow.train$zest[is.na(zillow.train$logZest)==FALSE])^2))
e^10
log(100000)
10^11.51293
sqrt(mean((exp(train.pred[is.na(zillow.train$logZest)==FALSE]) - zillow.train$zest[is.na(zillow.train$logZest)==FALSE])^2))
mean(abs(exp(train.pred[is.na(zillow.train$logZest)==FALSE]))-zillow.train$zest[is.na(zillow.train$logZest)==FALSE]))
mean(abs(exp(train.pred[is.na(zillow.train$logZest)==FALSE])-zillow.train$zest[is.na(zillow.train$logZest)==FALSE]))
cor(zillow.test$logZest[is.na(zillow.test$logZest)==FALSE],test.pred[is.na(zillow.test$logZest)==FALSE])
sqrt(mean((exp(test.pred[is.na(zillow.test$logZest)==FALSE]) - zillow.test$zest[is.na(zillow.test$logZest)==FALSE])^2))
mean(abs(exp(test.pred[is.na(zillow.test$logZest)==FALSE])-zillow.test$zest[is.na(zillow.test$logZest)==FALSE]))
View(zillow.test)
zillow.test$logZest[is.na(zillow.test$logZest)==FALSE]
test.pred[is.na(zillow.test$logZest)==FALSE]
test.pred[is.na(zillow.test$logZest)==FALSE && is.na(test.pred)==FALSE]
test.pred[is.na(test.pred)==FALSE]
test.pred[is.na(zillow.test$logZest)==FALSE & is.na(test.pred)==FALSE]
cor(zillow.test$logZest[is.na(zillow.test$logZest)==FALSE & is.na(test.pred)==FALSE],
test.pred[is.na(zillow.test$logZest)==FALSE & is.na(test.pred)==FALSE])
sqrt(mean((exp(test.pred[is.na(zillow.test$logZest)==FALSE & is.na(test.pred)==FALSE]) -
zillow.test$zest[is.na(zillow.test$logZest)==FALSE & is.na(test.pred)==FALSE])^2))
mean(abs(exp(test.pred[is.na(zillow.test$logZest)==FALSE & is.na(test.pred)==FALSE]) -
zillow.test$zest[is.na(zillow.test$logZest)==FALSE & is.na(test.pred)==FALSE]))
cor(zillow.train$logZest[is.na(zillow.train$logZest)==FALSE & is.na(test.pred)==FALSE],train.pred[is.na(zillow.train$logZest)==FALSE & is.na(test.pred)==FALSE])
cor(zillow.train$logZest[is.na(zillow.train$logZest)==FALSE & is.na(train.pred)==FALSE],train.pred[is.na(zillow.train$logZest)==FALSE & is.na(train.pred)==FALSE])
sqrt(mean((exp(train.pred[is.na(zillow.train$logZest)==FALSE & is.na(train.pred)==FALSE]) - zillow.train$zest[is.na(zillow.train$logZest)==FALSE & is.na(train.pred)==FALSE])^2))
mean(abs(exp(train.pred[is.na(zillow.train$logZest)==FALSE & is.na(train.pred)==FALSE])-zillow.train$zest[is.na(zillow.train$logZest)==FALSE & is.na(train.pred)==FALSE]))
